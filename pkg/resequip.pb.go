// Code generated by protoc-gen-go. DO NOT EDIT.
// source: resequip.proto

package resequip

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SortOrder int32

const (
	SortOrder_none_order SortOrder = 0
	SortOrder_asc        SortOrder = 1
	SortOrder_desc       SortOrder = 2
)

var SortOrder_name = map[int32]string{
	0: "none_order",
	1: "asc",
	2: "desc",
}

var SortOrder_value = map[string]int32{
	"none_order": 0,
	"asc":        1,
	"desc":       2,
}

func (x SortOrder) String() string {
	return proto.EnumName(SortOrder_name, int32(x))
}

func (SortOrder) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ba126980905ca6b5, []int{0}
}

type Role int32

const (
	Role_none_role   Role = 0
	Role_employee    Role = 1
	Role_team_leader Role = 2
	Role_support     Role = 3
)

var Role_name = map[int32]string{
	0: "none_role",
	1: "employee",
	2: "team_leader",
	3: "support",
}

var Role_value = map[string]int32{
	"none_role":   0,
	"employee":    1,
	"team_leader": 2,
	"support":     3,
}

func (x Role) String() string {
	return proto.EnumName(Role_name, int32(x))
}

func (Role) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ba126980905ca6b5, []int{1}
}

type IncidentPriority int32

const (
	IncidentPriority_none_priority IncidentPriority = 0
	IncidentPriority_high          IncidentPriority = 1
	IncidentPriority_medium        IncidentPriority = 2
	IncidentPriority_low           IncidentPriority = 3
)

var IncidentPriority_name = map[int32]string{
	0: "none_priority",
	1: "high",
	2: "medium",
	3: "low",
}

var IncidentPriority_value = map[string]int32{
	"none_priority": 0,
	"high":          1,
	"medium":        2,
	"low":           3,
}

func (x IncidentPriority) String() string {
	return proto.EnumName(IncidentPriority_name, int32(x))
}

func (IncidentPriority) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ba126980905ca6b5, []int{2}
}

type IncidentStatus int32

const (
	IncidentStatus_none_status IncidentStatus = 0
	IncidentStatus_created     IncidentStatus = 1
	IncidentStatus_assigned    IncidentStatus = 2
	IncidentStatus_resolved    IncidentStatus = 3
	IncidentStatus_dismissed   IncidentStatus = 4
)

var IncidentStatus_name = map[int32]string{
	0: "none_status",
	1: "created",
	2: "assigned",
	3: "resolved",
	4: "dismissed",
}

var IncidentStatus_value = map[string]int32{
	"none_status": 0,
	"created":     1,
	"assigned":    2,
	"resolved":    3,
	"dismissed":   4,
}

func (x IncidentStatus) String() string {
	return proto.EnumName(IncidentStatus_name, int32(x))
}

func (IncidentStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ba126980905ca6b5, []int{3}
}

type IncidentType int32

const (
	IncidentType_none_type   IncidentType = 0
	IncidentType_maintenance IncidentType = 1
	IncidentType_equipment   IncidentType = 2
)

var IncidentType_name = map[int32]string{
	0: "none_type",
	1: "maintenance",
	2: "equipment",
}

var IncidentType_value = map[string]int32{
	"none_type":   0,
	"maintenance": 1,
	"equipment":   2,
}

func (x IncidentType) String() string {
	return proto.EnumName(IncidentType_name, int32(x))
}

func (IncidentType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ba126980905ca6b5, []int{4}
}

type Id struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Id) Reset()         { *m = Id{} }
func (m *Id) String() string { return proto.CompactTextString(m) }
func (*Id) ProtoMessage()    {}
func (*Id) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba126980905ca6b5, []int{0}
}

func (m *Id) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Id.Unmarshal(m, b)
}
func (m *Id) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Id.Marshal(b, m, deterministic)
}
func (m *Id) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Id.Merge(m, src)
}
func (m *Id) XXX_Size() int {
	return xxx_messageInfo_Id.Size(m)
}
func (m *Id) XXX_DiscardUnknown() {
	xxx_messageInfo_Id.DiscardUnknown(m)
}

var xxx_messageInfo_Id proto.InternalMessageInfo

func (m *Id) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type TimestampSelector struct {
	LowerBound           *timestamp.Timestamp `protobuf:"bytes,1,opt,name=lower_bound,json=lowerBound,proto3" json:"lower_bound,omitempty"`
	UpperBound           *timestamp.Timestamp `protobuf:"bytes,2,opt,name=upper_bound,json=upperBound,proto3" json:"upper_bound,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TimestampSelector) Reset()         { *m = TimestampSelector{} }
func (m *TimestampSelector) String() string { return proto.CompactTextString(m) }
func (*TimestampSelector) ProtoMessage()    {}
func (*TimestampSelector) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba126980905ca6b5, []int{1}
}

func (m *TimestampSelector) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimestampSelector.Unmarshal(m, b)
}
func (m *TimestampSelector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimestampSelector.Marshal(b, m, deterministic)
}
func (m *TimestampSelector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimestampSelector.Merge(m, src)
}
func (m *TimestampSelector) XXX_Size() int {
	return xxx_messageInfo_TimestampSelector.Size(m)
}
func (m *TimestampSelector) XXX_DiscardUnknown() {
	xxx_messageInfo_TimestampSelector.DiscardUnknown(m)
}

var xxx_messageInfo_TimestampSelector proto.InternalMessageInfo

func (m *TimestampSelector) GetLowerBound() *timestamp.Timestamp {
	if m != nil {
		return m.LowerBound
	}
	return nil
}

func (m *TimestampSelector) GetUpperBound() *timestamp.Timestamp {
	if m != nil {
		return m.UpperBound
	}
	return nil
}

type Pagination struct {
	Limit                uint64    `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               uint64    `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	SortBy               string    `protobuf:"bytes,3,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	Order                SortOrder `protobuf:"varint,4,opt,name=order,proto3,enum=resequip.SortOrder" json:"order,omitempty"`
	TotalHits            uint64    `protobuf:"varint,5,opt,name=total_hits,json=totalHits,proto3" json:"total_hits,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Pagination) Reset()         { *m = Pagination{} }
func (m *Pagination) String() string { return proto.CompactTextString(m) }
func (*Pagination) ProtoMessage()    {}
func (*Pagination) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba126980905ca6b5, []int{2}
}

func (m *Pagination) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pagination.Unmarshal(m, b)
}
func (m *Pagination) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pagination.Marshal(b, m, deterministic)
}
func (m *Pagination) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pagination.Merge(m, src)
}
func (m *Pagination) XXX_Size() int {
	return xxx_messageInfo_Pagination.Size(m)
}
func (m *Pagination) XXX_DiscardUnknown() {
	xxx_messageInfo_Pagination.DiscardUnknown(m)
}

var xxx_messageInfo_Pagination proto.InternalMessageInfo

func (m *Pagination) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *Pagination) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *Pagination) GetSortBy() string {
	if m != nil {
		return m.SortBy
	}
	return ""
}

func (m *Pagination) GetOrder() SortOrder {
	if m != nil {
		return m.Order
	}
	return SortOrder_none_order
}

func (m *Pagination) GetTotalHits() uint64 {
	if m != nil {
		return m.TotalHits
	}
	return 0
}

type ChatToken struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChatToken) Reset()         { *m = ChatToken{} }
func (m *ChatToken) String() string { return proto.CompactTextString(m) }
func (*ChatToken) ProtoMessage()    {}
func (*ChatToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba126980905ca6b5, []int{3}
}

func (m *ChatToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChatToken.Unmarshal(m, b)
}
func (m *ChatToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChatToken.Marshal(b, m, deterministic)
}
func (m *ChatToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatToken.Merge(m, src)
}
func (m *ChatToken) XXX_Size() int {
	return xxx_messageInfo_ChatToken.Size(m)
}
func (m *ChatToken) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatToken.DiscardUnknown(m)
}

var xxx_messageInfo_ChatToken proto.InternalMessageInfo

func (m *ChatToken) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type Message struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid                  string   `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Login                string   `protobuf:"bytes,3,opt,name=login,proto3" json:"login,omitempty"`
	FullName             string   `protobuf:"bytes,4,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	Time                 int64    `protobuf:"varint,5,opt,name=time,proto3" json:"time,omitempty"`
	Message              string   `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	EventId              string   `protobuf:"bytes,7,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba126980905ca6b5, []int{4}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Message) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *Message) GetLogin() string {
	if m != nil {
		return m.Login
	}
	return ""
}

func (m *Message) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *Message) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Message) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Message) GetEventId() string {
	if m != nil {
		return m.EventId
	}
	return ""
}

type ChatHistory struct {
	Messages             []*Message `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ChatHistory) Reset()         { *m = ChatHistory{} }
func (m *ChatHistory) String() string { return proto.CompactTextString(m) }
func (*ChatHistory) ProtoMessage()    {}
func (*ChatHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba126980905ca6b5, []int{5}
}

func (m *ChatHistory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChatHistory.Unmarshal(m, b)
}
func (m *ChatHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChatHistory.Marshal(b, m, deterministic)
}
func (m *ChatHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatHistory.Merge(m, src)
}
func (m *ChatHistory) XXX_Size() int {
	return xxx_messageInfo_ChatHistory.Size(m)
}
func (m *ChatHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatHistory.DiscardUnknown(m)
}

var xxx_messageInfo_ChatHistory proto.InternalMessageInfo

func (m *ChatHistory) GetMessages() []*Message {
	if m != nil {
		return m.Messages
	}
	return nil
}

type Person struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Login                string   `protobuf:"bytes,2,opt,name=login,proto3" json:"login,omitempty"`
	Email                string   `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	FullName             string   `protobuf:"bytes,5,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	Role                 Role     `protobuf:"varint,6,opt,name=role,proto3,enum=resequip.Role" json:"role,omitempty"`
	ManagerId            string   `protobuf:"bytes,7,opt,name=manager_id,json=managerId,proto3" json:"manager_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Person) Reset()         { *m = Person{} }
func (m *Person) String() string { return proto.CompactTextString(m) }
func (*Person) ProtoMessage()    {}
func (*Person) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba126980905ca6b5, []int{6}
}

func (m *Person) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Person.Unmarshal(m, b)
}
func (m *Person) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Person.Marshal(b, m, deterministic)
}
func (m *Person) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Person.Merge(m, src)
}
func (m *Person) XXX_Size() int {
	return xxx_messageInfo_Person.Size(m)
}
func (m *Person) XXX_DiscardUnknown() {
	xxx_messageInfo_Person.DiscardUnknown(m)
}

var xxx_messageInfo_Person proto.InternalMessageInfo

func (m *Person) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Person) GetLogin() string {
	if m != nil {
		return m.Login
	}
	return ""
}

func (m *Person) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Person) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *Person) GetRole() Role {
	if m != nil {
		return m.Role
	}
	return Role_none_role
}

func (m *Person) GetManagerId() string {
	if m != nil {
		return m.ManagerId
	}
	return ""
}

type MaintenanceIncidentCreate struct {
	Description          *wrappers.StringValue `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Deadline             *timestamp.Timestamp  `protobuf:"bytes,2,opt,name=deadline,proto3" json:"deadline,omitempty"`
	Priority             IncidentPriority      `protobuf:"varint,3,opt,name=priority,proto3,enum=resequip.IncidentPriority" json:"priority,omitempty"`
	Comment              *wrappers.StringValue `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *MaintenanceIncidentCreate) Reset()         { *m = MaintenanceIncidentCreate{} }
func (m *MaintenanceIncidentCreate) String() string { return proto.CompactTextString(m) }
func (*MaintenanceIncidentCreate) ProtoMessage()    {}
func (*MaintenanceIncidentCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba126980905ca6b5, []int{7}
}

func (m *MaintenanceIncidentCreate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MaintenanceIncidentCreate.Unmarshal(m, b)
}
func (m *MaintenanceIncidentCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MaintenanceIncidentCreate.Marshal(b, m, deterministic)
}
func (m *MaintenanceIncidentCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MaintenanceIncidentCreate.Merge(m, src)
}
func (m *MaintenanceIncidentCreate) XXX_Size() int {
	return xxx_messageInfo_MaintenanceIncidentCreate.Size(m)
}
func (m *MaintenanceIncidentCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_MaintenanceIncidentCreate.DiscardUnknown(m)
}

var xxx_messageInfo_MaintenanceIncidentCreate proto.InternalMessageInfo

func (m *MaintenanceIncidentCreate) GetDescription() *wrappers.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *MaintenanceIncidentCreate) GetDeadline() *timestamp.Timestamp {
	if m != nil {
		return m.Deadline
	}
	return nil
}

func (m *MaintenanceIncidentCreate) GetPriority() IncidentPriority {
	if m != nil {
		return m.Priority
	}
	return IncidentPriority_none_priority
}

func (m *MaintenanceIncidentCreate) GetComment() *wrappers.StringValue {
	if m != nil {
		return m.Comment
	}
	return nil
}

type EquipmentIncidentCreate struct {
	Incident             *MaintenanceIncidentCreate `protobuf:"bytes,1,opt,name=incident,proto3" json:"incident,omitempty"`
	EquipmentId          string                     `protobuf:"bytes,2,opt,name=equipment_id,json=equipmentId,proto3" json:"equipment_id,omitempty"`
	Deadline             *timestamp.Timestamp       `protobuf:"bytes,3,opt,name=deadline,proto3" json:"deadline,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *EquipmentIncidentCreate) Reset()         { *m = EquipmentIncidentCreate{} }
func (m *EquipmentIncidentCreate) String() string { return proto.CompactTextString(m) }
func (*EquipmentIncidentCreate) ProtoMessage()    {}
func (*EquipmentIncidentCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba126980905ca6b5, []int{8}
}

func (m *EquipmentIncidentCreate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EquipmentIncidentCreate.Unmarshal(m, b)
}
func (m *EquipmentIncidentCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EquipmentIncidentCreate.Marshal(b, m, deterministic)
}
func (m *EquipmentIncidentCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EquipmentIncidentCreate.Merge(m, src)
}
func (m *EquipmentIncidentCreate) XXX_Size() int {
	return xxx_messageInfo_EquipmentIncidentCreate.Size(m)
}
func (m *EquipmentIncidentCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_EquipmentIncidentCreate.DiscardUnknown(m)
}

var xxx_messageInfo_EquipmentIncidentCreate proto.InternalMessageInfo

func (m *EquipmentIncidentCreate) GetIncident() *MaintenanceIncidentCreate {
	if m != nil {
		return m.Incident
	}
	return nil
}

func (m *EquipmentIncidentCreate) GetEquipmentId() string {
	if m != nil {
		return m.EquipmentId
	}
	return ""
}

func (m *EquipmentIncidentCreate) GetDeadline() *timestamp.Timestamp {
	if m != nil {
		return m.Deadline
	}
	return nil
}

type EquipmentIncident struct {
	Equipment            *Equipment           `protobuf:"bytes,1,opt,name=equipment,proto3" json:"equipment,omitempty"`
	Deadline             *timestamp.Timestamp `protobuf:"bytes,2,opt,name=deadline,proto3" json:"deadline,omitempty"`
	RequiresApproval     bool                 `protobuf:"varint,3,opt,name=requires_approval,json=requiresApproval,proto3" json:"requires_approval,omitempty"`
	Approved             bool                 `protobuf:"varint,4,opt,name=approved,proto3" json:"approved,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *EquipmentIncident) Reset()         { *m = EquipmentIncident{} }
func (m *EquipmentIncident) String() string { return proto.CompactTextString(m) }
func (*EquipmentIncident) ProtoMessage()    {}
func (*EquipmentIncident) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba126980905ca6b5, []int{9}
}

func (m *EquipmentIncident) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EquipmentIncident.Unmarshal(m, b)
}
func (m *EquipmentIncident) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EquipmentIncident.Marshal(b, m, deterministic)
}
func (m *EquipmentIncident) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EquipmentIncident.Merge(m, src)
}
func (m *EquipmentIncident) XXX_Size() int {
	return xxx_messageInfo_EquipmentIncident.Size(m)
}
func (m *EquipmentIncident) XXX_DiscardUnknown() {
	xxx_messageInfo_EquipmentIncident.DiscardUnknown(m)
}

var xxx_messageInfo_EquipmentIncident proto.InternalMessageInfo

func (m *EquipmentIncident) GetEquipment() *Equipment {
	if m != nil {
		return m.Equipment
	}
	return nil
}

func (m *EquipmentIncident) GetDeadline() *timestamp.Timestamp {
	if m != nil {
		return m.Deadline
	}
	return nil
}

func (m *EquipmentIncident) GetRequiresApproval() bool {
	if m != nil {
		return m.RequiresApproval
	}
	return false
}

func (m *EquipmentIncident) GetApproved() bool {
	if m != nil {
		return m.Approved
	}
	return false
}

type Incident struct {
	Id                   string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Ordinal              int64                 `protobuf:"varint,2,opt,name=ordinal,proto3" json:"ordinal,omitempty"`
	Description          string                `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Priority             IncidentPriority      `protobuf:"varint,4,opt,name=priority,proto3,enum=resequip.IncidentPriority" json:"priority,omitempty"`
	Deadline             *timestamp.Timestamp  `protobuf:"bytes,5,opt,name=deadline,proto3" json:"deadline,omitempty"`
	Comment              *wrappers.StringValue `protobuf:"bytes,6,opt,name=comment,proto3" json:"comment,omitempty"`
	Status               IncidentStatus        `protobuf:"varint,7,opt,name=status,proto3,enum=resequip.IncidentStatus" json:"status,omitempty"`
	Type                 IncidentType          `protobuf:"varint,8,opt,name=type,proto3,enum=resequip.IncidentType" json:"type,omitempty"`
	CreatedAt            *timestamp.Timestamp  `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ResolvedAt           *timestamp.Timestamp  `protobuf:"bytes,10,opt,name=resolved_at,json=resolvedAt,proto3" json:"resolved_at,omitempty"`
	Assignee             *Person               `protobuf:"bytes,11,opt,name=assignee,proto3" json:"assignee,omitempty"`
	Creator              *Person               `protobuf:"bytes,12,opt,name=creator,proto3" json:"creator,omitempty"`
	EquipmentIncident    *EquipmentIncident    `protobuf:"bytes,13,opt,name=equipment_incident,json=equipmentIncident,proto3" json:"equipment_incident,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Incident) Reset()         { *m = Incident{} }
func (m *Incident) String() string { return proto.CompactTextString(m) }
func (*Incident) ProtoMessage()    {}
func (*Incident) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba126980905ca6b5, []int{10}
}

func (m *Incident) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Incident.Unmarshal(m, b)
}
func (m *Incident) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Incident.Marshal(b, m, deterministic)
}
func (m *Incident) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Incident.Merge(m, src)
}
func (m *Incident) XXX_Size() int {
	return xxx_messageInfo_Incident.Size(m)
}
func (m *Incident) XXX_DiscardUnknown() {
	xxx_messageInfo_Incident.DiscardUnknown(m)
}

var xxx_messageInfo_Incident proto.InternalMessageInfo

func (m *Incident) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Incident) GetOrdinal() int64 {
	if m != nil {
		return m.Ordinal
	}
	return 0
}

func (m *Incident) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Incident) GetPriority() IncidentPriority {
	if m != nil {
		return m.Priority
	}
	return IncidentPriority_none_priority
}

func (m *Incident) GetDeadline() *timestamp.Timestamp {
	if m != nil {
		return m.Deadline
	}
	return nil
}

func (m *Incident) GetComment() *wrappers.StringValue {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *Incident) GetStatus() IncidentStatus {
	if m != nil {
		return m.Status
	}
	return IncidentStatus_none_status
}

func (m *Incident) GetType() IncidentType {
	if m != nil {
		return m.Type
	}
	return IncidentType_none_type
}

func (m *Incident) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Incident) GetResolvedAt() *timestamp.Timestamp {
	if m != nil {
		return m.ResolvedAt
	}
	return nil
}

func (m *Incident) GetAssignee() *Person {
	if m != nil {
		return m.Assignee
	}
	return nil
}

func (m *Incident) GetCreator() *Person {
	if m != nil {
		return m.Creator
	}
	return nil
}

func (m *Incident) GetEquipmentIncident() *EquipmentIncident {
	if m != nil {
		return m.EquipmentIncident
	}
	return nil
}

type IncidentList struct {
	Incidents            []*Incident `protobuf:"bytes,1,rep,name=incidents,proto3" json:"incidents,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *IncidentList) Reset()         { *m = IncidentList{} }
func (m *IncidentList) String() string { return proto.CompactTextString(m) }
func (*IncidentList) ProtoMessage()    {}
func (*IncidentList) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba126980905ca6b5, []int{11}
}

func (m *IncidentList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IncidentList.Unmarshal(m, b)
}
func (m *IncidentList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IncidentList.Marshal(b, m, deterministic)
}
func (m *IncidentList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IncidentList.Merge(m, src)
}
func (m *IncidentList) XXX_Size() int {
	return xxx_messageInfo_IncidentList.Size(m)
}
func (m *IncidentList) XXX_DiscardUnknown() {
	xxx_messageInfo_IncidentList.DiscardUnknown(m)
}

var xxx_messageInfo_IncidentList proto.InternalMessageInfo

func (m *IncidentList) GetIncidents() []*Incident {
	if m != nil {
		return m.Incidents
	}
	return nil
}

type IncidentFilter struct {
	Ordinal              *wrappers.Int64Value  `protobuf:"bytes,1,opt,name=ordinal,proto3" json:"ordinal,omitempty"`
	Search               *wrappers.StringValue `protobuf:"bytes,2,opt,name=search,proto3" json:"search,omitempty"`
	AssigneeId           *wrappers.StringValue `protobuf:"bytes,3,opt,name=assignee_id,json=assigneeId,proto3" json:"assignee_id,omitempty"`
	CreatorId            *wrappers.StringValue `protobuf:"bytes,4,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	Status               IncidentStatus        `protobuf:"varint,5,opt,name=status,proto3,enum=resequip.IncidentStatus" json:"status,omitempty"`
	Type                 IncidentType          `protobuf:"varint,6,opt,name=type,proto3,enum=resequip.IncidentType" json:"type,omitempty"`
	Deadline             *TimestampSelector    `protobuf:"bytes,7,opt,name=deadline,proto3" json:"deadline,omitempty"`
	CreatedAt            *TimestampSelector    `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *IncidentFilter) Reset()         { *m = IncidentFilter{} }
func (m *IncidentFilter) String() string { return proto.CompactTextString(m) }
func (*IncidentFilter) ProtoMessage()    {}
func (*IncidentFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba126980905ca6b5, []int{12}
}

func (m *IncidentFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IncidentFilter.Unmarshal(m, b)
}
func (m *IncidentFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IncidentFilter.Marshal(b, m, deterministic)
}
func (m *IncidentFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IncidentFilter.Merge(m, src)
}
func (m *IncidentFilter) XXX_Size() int {
	return xxx_messageInfo_IncidentFilter.Size(m)
}
func (m *IncidentFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_IncidentFilter.DiscardUnknown(m)
}

var xxx_messageInfo_IncidentFilter proto.InternalMessageInfo

func (m *IncidentFilter) GetOrdinal() *wrappers.Int64Value {
	if m != nil {
		return m.Ordinal
	}
	return nil
}

func (m *IncidentFilter) GetSearch() *wrappers.StringValue {
	if m != nil {
		return m.Search
	}
	return nil
}

func (m *IncidentFilter) GetAssigneeId() *wrappers.StringValue {
	if m != nil {
		return m.AssigneeId
	}
	return nil
}

func (m *IncidentFilter) GetCreatorId() *wrappers.StringValue {
	if m != nil {
		return m.CreatorId
	}
	return nil
}

func (m *IncidentFilter) GetStatus() IncidentStatus {
	if m != nil {
		return m.Status
	}
	return IncidentStatus_none_status
}

func (m *IncidentFilter) GetType() IncidentType {
	if m != nil {
		return m.Type
	}
	return IncidentType_none_type
}

func (m *IncidentFilter) GetDeadline() *TimestampSelector {
	if m != nil {
		return m.Deadline
	}
	return nil
}

func (m *IncidentFilter) GetCreatedAt() *TimestampSelector {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type EquipmentCreate struct {
	Name                 *wrappers.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          *wrappers.StringValue `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Price                *wrappers.Int64Value  `protobuf:"bytes,4,opt,name=price,proto3" json:"price,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *EquipmentCreate) Reset()         { *m = EquipmentCreate{} }
func (m *EquipmentCreate) String() string { return proto.CompactTextString(m) }
func (*EquipmentCreate) ProtoMessage()    {}
func (*EquipmentCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba126980905ca6b5, []int{13}
}

func (m *EquipmentCreate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EquipmentCreate.Unmarshal(m, b)
}
func (m *EquipmentCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EquipmentCreate.Marshal(b, m, deterministic)
}
func (m *EquipmentCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EquipmentCreate.Merge(m, src)
}
func (m *EquipmentCreate) XXX_Size() int {
	return xxx_messageInfo_EquipmentCreate.Size(m)
}
func (m *EquipmentCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_EquipmentCreate.DiscardUnknown(m)
}

var xxx_messageInfo_EquipmentCreate proto.InternalMessageInfo

func (m *EquipmentCreate) GetName() *wrappers.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *EquipmentCreate) GetDescription() *wrappers.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *EquipmentCreate) GetPrice() *wrappers.Int64Value {
	if m != nil {
		return m.Price
	}
	return nil
}

type Equipment struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Price                int64    `protobuf:"varint,4,opt,name=price,proto3" json:"price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Equipment) Reset()         { *m = Equipment{} }
func (m *Equipment) String() string { return proto.CompactTextString(m) }
func (*Equipment) ProtoMessage()    {}
func (*Equipment) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba126980905ca6b5, []int{14}
}

func (m *Equipment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Equipment.Unmarshal(m, b)
}
func (m *Equipment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Equipment.Marshal(b, m, deterministic)
}
func (m *Equipment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Equipment.Merge(m, src)
}
func (m *Equipment) XXX_Size() int {
	return xxx_messageInfo_Equipment.Size(m)
}
func (m *Equipment) XXX_DiscardUnknown() {
	xxx_messageInfo_Equipment.DiscardUnknown(m)
}

var xxx_messageInfo_Equipment proto.InternalMessageInfo

func (m *Equipment) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Equipment) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Equipment) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Equipment) GetPrice() int64 {
	if m != nil {
		return m.Price
	}
	return 0
}

type AssignedEquipment struct {
	Equipment            *Equipment           `protobuf:"bytes,1,opt,name=equipment,proto3" json:"equipment,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Deadline             *timestamp.Timestamp `protobuf:"bytes,3,opt,name=deadline,proto3" json:"deadline,omitempty"`
	PersonId             string               `protobuf:"bytes,4,opt,name=person_id,json=personId,proto3" json:"person_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AssignedEquipment) Reset()         { *m = AssignedEquipment{} }
func (m *AssignedEquipment) String() string { return proto.CompactTextString(m) }
func (*AssignedEquipment) ProtoMessage()    {}
func (*AssignedEquipment) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba126980905ca6b5, []int{15}
}

func (m *AssignedEquipment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignedEquipment.Unmarshal(m, b)
}
func (m *AssignedEquipment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignedEquipment.Marshal(b, m, deterministic)
}
func (m *AssignedEquipment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignedEquipment.Merge(m, src)
}
func (m *AssignedEquipment) XXX_Size() int {
	return xxx_messageInfo_AssignedEquipment.Size(m)
}
func (m *AssignedEquipment) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignedEquipment.DiscardUnknown(m)
}

var xxx_messageInfo_AssignedEquipment proto.InternalMessageInfo

func (m *AssignedEquipment) GetEquipment() *Equipment {
	if m != nil {
		return m.Equipment
	}
	return nil
}

func (m *AssignedEquipment) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *AssignedEquipment) GetDeadline() *timestamp.Timestamp {
	if m != nil {
		return m.Deadline
	}
	return nil
}

func (m *AssignedEquipment) GetPersonId() string {
	if m != nil {
		return m.PersonId
	}
	return ""
}

type EquipmentList struct {
	Equipment            []*Equipment `protobuf:"bytes,1,rep,name=equipment,proto3" json:"equipment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *EquipmentList) Reset()         { *m = EquipmentList{} }
func (m *EquipmentList) String() string { return proto.CompactTextString(m) }
func (*EquipmentList) ProtoMessage()    {}
func (*EquipmentList) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba126980905ca6b5, []int{16}
}

func (m *EquipmentList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EquipmentList.Unmarshal(m, b)
}
func (m *EquipmentList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EquipmentList.Marshal(b, m, deterministic)
}
func (m *EquipmentList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EquipmentList.Merge(m, src)
}
func (m *EquipmentList) XXX_Size() int {
	return xxx_messageInfo_EquipmentList.Size(m)
}
func (m *EquipmentList) XXX_DiscardUnknown() {
	xxx_messageInfo_EquipmentList.DiscardUnknown(m)
}

var xxx_messageInfo_EquipmentList proto.InternalMessageInfo

func (m *EquipmentList) GetEquipment() []*Equipment {
	if m != nil {
		return m.Equipment
	}
	return nil
}

type AssignedEquipmentList struct {
	Equipment            []*AssignedEquipment `protobuf:"bytes,1,rep,name=equipment,proto3" json:"equipment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AssignedEquipmentList) Reset()         { *m = AssignedEquipmentList{} }
func (m *AssignedEquipmentList) String() string { return proto.CompactTextString(m) }
func (*AssignedEquipmentList) ProtoMessage()    {}
func (*AssignedEquipmentList) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba126980905ca6b5, []int{17}
}

func (m *AssignedEquipmentList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignedEquipmentList.Unmarshal(m, b)
}
func (m *AssignedEquipmentList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignedEquipmentList.Marshal(b, m, deterministic)
}
func (m *AssignedEquipmentList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignedEquipmentList.Merge(m, src)
}
func (m *AssignedEquipmentList) XXX_Size() int {
	return xxx_messageInfo_AssignedEquipmentList.Size(m)
}
func (m *AssignedEquipmentList) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignedEquipmentList.DiscardUnknown(m)
}

var xxx_messageInfo_AssignedEquipmentList proto.InternalMessageInfo

func (m *AssignedEquipmentList) GetEquipment() []*AssignedEquipment {
	if m != nil {
		return m.Equipment
	}
	return nil
}

type EquipmentFilter struct {
	Search               *wrappers.StringValue `protobuf:"bytes,2,opt,name=search,proto3" json:"search,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *EquipmentFilter) Reset()         { *m = EquipmentFilter{} }
func (m *EquipmentFilter) String() string { return proto.CompactTextString(m) }
func (*EquipmentFilter) ProtoMessage()    {}
func (*EquipmentFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba126980905ca6b5, []int{18}
}

func (m *EquipmentFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EquipmentFilter.Unmarshal(m, b)
}
func (m *EquipmentFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EquipmentFilter.Marshal(b, m, deterministic)
}
func (m *EquipmentFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EquipmentFilter.Merge(m, src)
}
func (m *EquipmentFilter) XXX_Size() int {
	return xxx_messageInfo_EquipmentFilter.Size(m)
}
func (m *EquipmentFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_EquipmentFilter.DiscardUnknown(m)
}

var xxx_messageInfo_EquipmentFilter proto.InternalMessageInfo

func (m *EquipmentFilter) GetSearch() *wrappers.StringValue {
	if m != nil {
		return m.Search
	}
	return nil
}

type AssignmentRequest struct {
	IncidentId           string   `protobuf:"bytes,1,opt,name=incident_id,json=incidentId,proto3" json:"incident_id,omitempty"`
	PersonId             string   `protobuf:"bytes,2,opt,name=person_id,json=personId,proto3" json:"person_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AssignmentRequest) Reset()         { *m = AssignmentRequest{} }
func (m *AssignmentRequest) String() string { return proto.CompactTextString(m) }
func (*AssignmentRequest) ProtoMessage()    {}
func (*AssignmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba126980905ca6b5, []int{19}
}

func (m *AssignmentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignmentRequest.Unmarshal(m, b)
}
func (m *AssignmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignmentRequest.Marshal(b, m, deterministic)
}
func (m *AssignmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignmentRequest.Merge(m, src)
}
func (m *AssignmentRequest) XXX_Size() int {
	return xxx_messageInfo_AssignmentRequest.Size(m)
}
func (m *AssignmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AssignmentRequest proto.InternalMessageInfo

func (m *AssignmentRequest) GetIncidentId() string {
	if m != nil {
		return m.IncidentId
	}
	return ""
}

func (m *AssignmentRequest) GetPersonId() string {
	if m != nil {
		return m.PersonId
	}
	return ""
}

type IncidentStatusRequest struct {
	IncidentId           string         `protobuf:"bytes,1,opt,name=incident_id,json=incidentId,proto3" json:"incident_id,omitempty"`
	Status               IncidentStatus `protobuf:"varint,2,opt,name=status,proto3,enum=resequip.IncidentStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *IncidentStatusRequest) Reset()         { *m = IncidentStatusRequest{} }
func (m *IncidentStatusRequest) String() string { return proto.CompactTextString(m) }
func (*IncidentStatusRequest) ProtoMessage()    {}
func (*IncidentStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba126980905ca6b5, []int{20}
}

func (m *IncidentStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IncidentStatusRequest.Unmarshal(m, b)
}
func (m *IncidentStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IncidentStatusRequest.Marshal(b, m, deterministic)
}
func (m *IncidentStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IncidentStatusRequest.Merge(m, src)
}
func (m *IncidentStatusRequest) XXX_Size() int {
	return xxx_messageInfo_IncidentStatusRequest.Size(m)
}
func (m *IncidentStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IncidentStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IncidentStatusRequest proto.InternalMessageInfo

func (m *IncidentStatusRequest) GetIncidentId() string {
	if m != nil {
		return m.IncidentId
	}
	return ""
}

func (m *IncidentStatusRequest) GetStatus() IncidentStatus {
	if m != nil {
		return m.Status
	}
	return IncidentStatus_none_status
}

type IncidentCommentRequest struct {
	IncidentId           string                `protobuf:"bytes,1,opt,name=incident_id,json=incidentId,proto3" json:"incident_id,omitempty"`
	Comment              *wrappers.StringValue `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *IncidentCommentRequest) Reset()         { *m = IncidentCommentRequest{} }
func (m *IncidentCommentRequest) String() string { return proto.CompactTextString(m) }
func (*IncidentCommentRequest) ProtoMessage()    {}
func (*IncidentCommentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba126980905ca6b5, []int{21}
}

func (m *IncidentCommentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IncidentCommentRequest.Unmarshal(m, b)
}
func (m *IncidentCommentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IncidentCommentRequest.Marshal(b, m, deterministic)
}
func (m *IncidentCommentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IncidentCommentRequest.Merge(m, src)
}
func (m *IncidentCommentRequest) XXX_Size() int {
	return xxx_messageInfo_IncidentCommentRequest.Size(m)
}
func (m *IncidentCommentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IncidentCommentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IncidentCommentRequest proto.InternalMessageInfo

func (m *IncidentCommentRequest) GetIncidentId() string {
	if m != nil {
		return m.IncidentId
	}
	return ""
}

func (m *IncidentCommentRequest) GetComment() *wrappers.StringValue {
	if m != nil {
		return m.Comment
	}
	return nil
}

type IncidentApprovalRequest struct {
	IncidentId           string   `protobuf:"bytes,1,opt,name=incident_id,json=incidentId,proto3" json:"incident_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IncidentApprovalRequest) Reset()         { *m = IncidentApprovalRequest{} }
func (m *IncidentApprovalRequest) String() string { return proto.CompactTextString(m) }
func (*IncidentApprovalRequest) ProtoMessage()    {}
func (*IncidentApprovalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ba126980905ca6b5, []int{22}
}

func (m *IncidentApprovalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IncidentApprovalRequest.Unmarshal(m, b)
}
func (m *IncidentApprovalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IncidentApprovalRequest.Marshal(b, m, deterministic)
}
func (m *IncidentApprovalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IncidentApprovalRequest.Merge(m, src)
}
func (m *IncidentApprovalRequest) XXX_Size() int {
	return xxx_messageInfo_IncidentApprovalRequest.Size(m)
}
func (m *IncidentApprovalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IncidentApprovalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IncidentApprovalRequest proto.InternalMessageInfo

func (m *IncidentApprovalRequest) GetIncidentId() string {
	if m != nil {
		return m.IncidentId
	}
	return ""
}

func init() {
	proto.RegisterEnum("resequip.SortOrder", SortOrder_name, SortOrder_value)
	proto.RegisterEnum("resequip.Role", Role_name, Role_value)
	proto.RegisterEnum("resequip.IncidentPriority", IncidentPriority_name, IncidentPriority_value)
	proto.RegisterEnum("resequip.IncidentStatus", IncidentStatus_name, IncidentStatus_value)
	proto.RegisterEnum("resequip.IncidentType", IncidentType_name, IncidentType_value)
	proto.RegisterType((*Id)(nil), "resequip.Id")
	proto.RegisterType((*TimestampSelector)(nil), "resequip.TimestampSelector")
	proto.RegisterType((*Pagination)(nil), "resequip.Pagination")
	proto.RegisterType((*ChatToken)(nil), "resequip.ChatToken")
	proto.RegisterType((*Message)(nil), "resequip.Message")
	proto.RegisterType((*ChatHistory)(nil), "resequip.ChatHistory")
	proto.RegisterType((*Person)(nil), "resequip.Person")
	proto.RegisterType((*MaintenanceIncidentCreate)(nil), "resequip.MaintenanceIncidentCreate")
	proto.RegisterType((*EquipmentIncidentCreate)(nil), "resequip.EquipmentIncidentCreate")
	proto.RegisterType((*EquipmentIncident)(nil), "resequip.EquipmentIncident")
	proto.RegisterType((*Incident)(nil), "resequip.Incident")
	proto.RegisterType((*IncidentList)(nil), "resequip.IncidentList")
	proto.RegisterType((*IncidentFilter)(nil), "resequip.IncidentFilter")
	proto.RegisterType((*EquipmentCreate)(nil), "resequip.EquipmentCreate")
	proto.RegisterType((*Equipment)(nil), "resequip.Equipment")
	proto.RegisterType((*AssignedEquipment)(nil), "resequip.AssignedEquipment")
	proto.RegisterType((*EquipmentList)(nil), "resequip.EquipmentList")
	proto.RegisterType((*AssignedEquipmentList)(nil), "resequip.AssignedEquipmentList")
	proto.RegisterType((*EquipmentFilter)(nil), "resequip.EquipmentFilter")
	proto.RegisterType((*AssignmentRequest)(nil), "resequip.AssignmentRequest")
	proto.RegisterType((*IncidentStatusRequest)(nil), "resequip.IncidentStatusRequest")
	proto.RegisterType((*IncidentCommentRequest)(nil), "resequip.IncidentCommentRequest")
	proto.RegisterType((*IncidentApprovalRequest)(nil), "resequip.IncidentApprovalRequest")
}

func init() { proto.RegisterFile("resequip.proto", fileDescriptor_ba126980905ca6b5) }

var fileDescriptor_ba126980905ca6b5 = []byte{
	// 2017 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x58, 0xcd, 0x93, 0x1b, 0x47,
	0x15, 0xdf, 0x91, 0xb4, 0x92, 0xe6, 0x69, 0x57, 0x3b, 0x6a, 0xaf, 0x77, 0xb5, 0xb2, 0x93, 0x95,
	0x27, 0x54, 0xc5, 0x28, 0xf6, 0xca, 0x16, 0xc6, 0x54, 0x0c, 0x21, 0x96, 0x4d, 0xe2, 0x88, 0x4a,
	0xb0, 0x19, 0xbb, 0xa0, 0xb8, 0xa0, 0x6a, 0x6b, 0x7a, 0xb5, 0x4d, 0xe6, 0xcb, 0x33, 0x2d, 0x6f,
	0xa9, 0x52, 0xb9, 0x24, 0xc5, 0x81, 0x03, 0x97, 0xe5, 0x9c, 0x0b, 0x45, 0x15, 0xc5, 0x8d, 0x0b,
	0xf8, 0x0f, 0xe0, 0xc0, 0x85, 0x1b, 0x55, 0xfc, 0x05, 0xfc, 0x15, 0x9c, 0xa8, 0xfe, 0x98, 0x0f,
	0x8d, 0xa4, 0x95, 0x76, 0x73, 0x9b, 0xee, 0x7e, 0x1f, 0xbf, 0xf7, 0xfa, 0xf7, 0x5e, 0x3f, 0x09,
	0xea, 0x21, 0x89, 0xc8, 0xab, 0x09, 0x0d, 0x8e, 0x82, 0xd0, 0x67, 0x3e, 0xaa, 0xc6, 0xeb, 0xd6,
	0x2d, 0xb1, 0x31, 0xba, 0x3d, 0x26, 0xde, 0xed, 0xe8, 0x14, 0x8f, 0xc7, 0x24, 0xec, 0xfa, 0x01,
	0xa3, 0xbe, 0x17, 0x75, 0xb1, 0xe7, 0xf9, 0x0c, 0x8b, 0x6f, 0xa9, 0xd7, 0xba, 0x3e, 0xf6, 0xfd,
	0xb1, 0x43, 0xba, 0x38, 0xa0, 0x0b, 0x4e, 0x0f, 0xd5, 0xa9, 0x58, 0xbd, 0x9c, 0x1c, 0x77, 0x19,
	0x75, 0x49, 0xc4, 0xb0, 0xab, 0xdc, 0xb6, 0xae, 0xe5, 0x05, 0x88, 0x1b, 0xb0, 0xa9, 0x3a, 0x7c,
	0x37, 0xd9, 0x0d, 0xd8, 0x34, 0x20, 0x51, 0xf7, 0x34, 0xc4, 0x41, 0x40, 0xc2, 0xf4, 0x43, 0x0a,
	0x9a, 0xbb, 0x50, 0x18, 0xd8, 0xa8, 0x0e, 0x05, 0x6a, 0x37, 0xb5, 0xb6, 0x76, 0x53, 0xb7, 0x0a,
	0xd4, 0x36, 0x7f, 0xaf, 0x41, 0xe3, 0x45, 0xec, 0xef, 0x39, 0x71, 0xc8, 0x88, 0xf9, 0x21, 0xfa,
	0x21, 0xd4, 0x1c, 0xff, 0x94, 0x84, 0xc3, 0x97, 0xfe, 0xc4, 0x93, 0xe2, 0xb5, 0x5e, 0xeb, 0x48,
	0xe2, 0x38, 0x8a, 0x3d, 0x1e, 0x25, 0x8a, 0x16, 0x08, 0xf1, 0x47, 0x5c, 0x9a, 0x2b, 0x4f, 0xb8,
	0x63, 0xa5, 0x5c, 0x58, 0xad, 0x2c, 0xc4, 0x85, 0xb2, 0xf9, 0x8d, 0x06, 0xf0, 0x0c, 0x8f, 0xa9,
	0x27, 0x52, 0x84, 0x76, 0x61, 0xd3, 0xa1, 0x2e, 0x65, 0x02, 0x42, 0xc9, 0x92, 0x0b, 0xb4, 0x07,
	0x65, 0xff, 0xf8, 0x38, 0x22, 0x4c, 0x18, 0x2f, 0x59, 0x6a, 0x85, 0xf6, 0xa1, 0x12, 0xf9, 0x21,
	0x1b, 0xbe, 0x9c, 0x36, 0x8b, 0x22, 0xc2, 0x32, 0x5f, 0x3e, 0x9a, 0xa2, 0xef, 0xc2, 0xa6, 0x1f,
	0xda, 0x24, 0x6c, 0x96, 0xda, 0xda, 0xcd, 0x7a, 0xef, 0xca, 0x51, 0x72, 0xb1, 0xcf, 0xfd, 0x90,
	0x3d, 0xe5, 0x47, 0x96, 0x94, 0x40, 0x6f, 0x01, 0x30, 0x9f, 0x61, 0x67, 0x78, 0x42, 0x59, 0xd4,
	0xdc, 0x14, 0xf6, 0x75, 0xb1, 0xf3, 0x09, 0x65, 0x91, 0x79, 0x03, 0xf4, 0xc7, 0x27, 0x98, 0xbd,
	0xf0, 0x3f, 0x27, 0x02, 0x1d, 0xe3, 0x1f, 0x2a, 0x9f, 0x72, 0x61, 0xfe, 0x59, 0x83, 0xca, 0x67,
	0x24, 0x8a, 0xf0, 0x98, 0xe4, 0xd3, 0x8d, 0x0c, 0x28, 0x4e, 0xa8, 0xcc, 0x89, 0x6e, 0xf1, 0x4f,
	0x11, 0xa1, 0x3f, 0xa6, 0x9e, 0x42, 0x2c, 0x17, 0xe8, 0x1a, 0xe8, 0xc7, 0x13, 0xc7, 0x19, 0x7a,
	0xd8, 0x25, 0x02, 0xb4, 0x6e, 0x55, 0xf9, 0xc6, 0xcf, 0xb0, 0x4b, 0x10, 0x82, 0x12, 0xa7, 0x88,
	0x00, 0x57, 0xb4, 0xc4, 0x37, 0x6a, 0x42, 0xc5, 0x95, 0x3e, 0x9b, 0x65, 0x21, 0x1e, 0x2f, 0xd1,
	0x01, 0x54, 0xc9, 0x6b, 0xe2, 0xb1, 0x21, 0xb5, 0x9b, 0x15, 0x79, 0x24, 0xd6, 0x03, 0xdb, 0xfc,
	0x11, 0xd4, 0x78, 0x30, 0x9f, 0xd0, 0x88, 0xf9, 0xe1, 0x14, 0xdd, 0x86, 0xaa, 0x52, 0x8a, 0x9a,
	0x5a, 0xbb, 0x78, 0xb3, 0xd6, 0x6b, 0xa4, 0x89, 0x52, 0x11, 0x59, 0x89, 0x88, 0xf9, 0x27, 0x0d,
	0xca, 0xcf, 0x48, 0x18, 0xf9, 0xde, 0x5c, 0x98, 0x49, 0x50, 0x85, 0x6c, 0x50, 0xbb, 0xb0, 0x49,
	0x5c, 0x4c, 0x1d, 0x15, 0x90, 0x5c, 0xcc, 0x86, 0xba, 0x99, 0x0b, 0xd5, 0x84, 0x52, 0xe8, 0x3b,
	0x32, 0xa6, 0x7a, 0xaf, 0x9e, 0xc2, 0xb1, 0x7c, 0x87, 0x58, 0xe2, 0x8c, 0xdf, 0x98, 0x8b, 0x3d,
	0x3c, 0x26, 0x61, 0x1a, 0xa2, 0xae, 0x76, 0x06, 0xb6, 0xf9, 0x75, 0x01, 0x0e, 0x3e, 0xc3, 0xd4,
	0x63, 0xc4, 0xc3, 0xde, 0x88, 0x0c, 0xbc, 0x11, 0xb5, 0x89, 0xc7, 0x1e, 0x87, 0x04, 0x33, 0x82,
	0x7e, 0x0c, 0x35, 0x9b, 0x44, 0xa3, 0x90, 0x8a, 0xe2, 0x55, 0x4c, 0xbf, 0x3e, 0x47, 0xd6, 0xe7,
	0x2c, 0xa4, 0xde, 0xf8, 0x17, 0xd8, 0x99, 0x10, 0x2b, 0xab, 0x80, 0xee, 0x43, 0xd5, 0x26, 0xd8,
	0x76, 0xa8, 0x47, 0xd6, 0x60, 0x7a, 0x22, 0xcb, 0xf5, 0x82, 0x90, 0xfa, 0x21, 0x65, 0x92, 0xab,
	0xf5, 0x5e, 0x2b, 0x0d, 0x2e, 0xc6, 0xf8, 0x4c, 0x49, 0x58, 0x89, 0x2c, 0xba, 0x0f, 0x95, 0x91,
	0xef, 0xba, 0xc4, 0x63, 0x22, 0x8b, 0xab, 0xb0, 0xc6, 0xc2, 0xe6, 0xdf, 0x34, 0xd8, 0xff, 0x88,
	0x1b, 0xe7, 0xab, 0x5c, 0x0e, 0x3e, 0x84, 0x2a, 0x55, 0x3b, 0x2a, 0x01, 0xef, 0x64, 0xee, 0x7d,
	0x59, 0xea, 0xac, 0x44, 0x09, 0xdd, 0x80, 0x2d, 0x12, 0xdb, 0x1e, 0x26, 0xf4, 0xae, 0x25, 0x7b,
	0x03, 0x7b, 0x26, 0x4f, 0xc5, 0xf5, 0xf3, 0x64, 0xfe, 0x53, 0x83, 0xc6, 0x1c, 0x6e, 0x74, 0x17,
	0xf4, 0xc4, 0xb8, 0x82, 0x9c, 0xa9, 0xe9, 0x44, 0xde, 0x4a, 0xa5, 0x2e, 0x7d, 0x51, 0xef, 0x41,
	0x23, 0xe4, 0x56, 0x42, 0x12, 0x0d, 0x71, 0x10, 0x84, 0xfe, 0x6b, 0xec, 0x88, 0x08, 0xaa, 0x96,
	0x11, 0x1f, 0xf4, 0xd5, 0x3e, 0x6a, 0x41, 0x55, 0xca, 0x10, 0x5b, 0x5c, 0x4f, 0xd5, 0x4a, 0xd6,
	0xe6, 0xff, 0x4a, 0x50, 0x4d, 0x02, 0xc8, 0x17, 0x4c, 0x13, 0x2a, 0x7e, 0x68, 0x53, 0x0f, 0x3b,
	0x02, 0x5c, 0xd1, 0x8a, 0x97, 0xa8, 0x3d, 0x4b, 0x50, 0xd9, 0x25, 0xf2, 0x14, 0x4c, 0xa8, 0x54,
	0xba, 0x10, 0x95, 0xd2, 0x8c, 0x6c, 0x5e, 0x88, 0xba, 0x09, 0x05, 0xcb, 0x17, 0xa0, 0x20, 0xba,
	0x03, 0xe5, 0x88, 0x61, 0x36, 0x89, 0x44, 0x8d, 0xd6, 0x7b, 0xcd, 0x79, 0x94, 0xcf, 0xc5, 0xb9,
	0xa5, 0xe4, 0x50, 0x07, 0x4a, 0xfc, 0x4d, 0x6b, 0x56, 0x85, 0xfc, 0xde, 0xbc, 0xfc, 0x8b, 0x69,
	0x40, 0x2c, 0x21, 0x83, 0xde, 0x07, 0x18, 0x09, 0x5e, 0xda, 0x43, 0xcc, 0x9a, 0xfa, 0xca, 0x78,
	0x74, 0x25, 0xdd, 0x67, 0xfc, 0xc1, 0x0a, 0x49, 0xe4, 0x3b, 0xaf, 0xa5, 0x2e, 0xac, 0x7e, 0xb0,
	0x62, 0xf1, 0x3e, 0x43, 0xb7, 0xa0, 0x8a, 0xa3, 0x88, 0x8e, 0x3d, 0x42, 0x9a, 0x35, 0xa1, 0x69,
	0xa4, 0x38, 0x65, 0x7b, 0xb4, 0x12, 0x09, 0xd4, 0x81, 0x8a, 0xf0, 0xeb, 0x87, 0xcd, 0xad, 0x25,
	0xc2, 0xb1, 0x00, 0xfa, 0x29, 0xa0, 0x4c, 0x55, 0xc5, 0x05, 0xba, 0x2d, 0xd4, 0xae, 0x2d, 0x60,
	0x7b, 0x9c, 0x14, 0xab, 0x41, 0xf2, 0x5b, 0xe6, 0x43, 0xd8, 0x8a, 0xbf, 0x3f, 0xa5, 0x11, 0xbf,
	0x0b, 0x3d, 0xb6, 0x18, 0xf7, 0x7a, 0x34, 0x9f, 0x5e, 0x2b, 0x15, 0x32, 0xff, 0x55, 0x84, 0x7a,
	0xbc, 0xff, 0x31, 0x75, 0x18, 0x09, 0xd1, 0xf7, 0x53, 0xd2, 0x6a, 0x0a, 0x55, 0x3e, 0x67, 0x03,
	0x8f, 0xdd, 0xbf, 0xa7, 0x78, 0x10, 0x33, 0xfa, 0x1e, 0x94, 0x23, 0x82, 0xc3, 0xd1, 0x89, 0xaa,
	0xc3, 0xf3, 0xe9, 0xa3, 0x64, 0xd1, 0x07, 0x50, 0x8b, 0xb3, 0xc8, 0x5b, 0x4c, 0x71, 0x0d, 0x55,
	0x88, 0x15, 0x06, 0x7c, 0x28, 0x01, 0x95, 0x57, 0xae, 0xbd, 0x4e, 0xeb, 0xd4, 0x95, 0xfc, 0xc0,
	0xce, 0x30, 0x77, 0xf3, 0x82, 0xcc, 0x2d, 0xaf, 0xc1, 0xdc, 0x1f, 0x64, 0xea, 0xb0, 0x92, 0xbf,
	0xdd, 0xb9, 0xd9, 0x2c, 0x53, 0x88, 0x0f, 0x66, 0x28, 0x5f, 0x5d, 0xad, 0x9a, 0x72, 0xde, 0xfc,
	0xbb, 0x06, 0x3b, 0x09, 0x73, 0xd4, 0x3b, 0x70, 0x07, 0x4a, 0xe2, 0x11, 0x5e, 0xe7, 0x5a, 0x84,
	0x64, 0xfe, 0xf5, 0x2c, 0x5e, 0xf4, 0xf5, 0xbc, 0x0b, 0x9b, 0x41, 0x48, 0x47, 0x44, 0x5d, 0xc8,
	0xb9, 0xfc, 0x91, 0x92, 0xe6, 0x18, 0xf4, 0x04, 0xf7, 0x5c, 0x1b, 0x45, 0x99, 0x08, 0x74, 0x85,
	0x71, 0x75, 0x03, 0xdd, 0xcd, 0xa2, 0x28, 0xc6, 0x8e, 0xfe, 0xa3, 0x41, 0xa3, 0x2f, 0x09, 0x64,
	0xa7, 0x1e, 0x2f, 0xf1, 0xf2, 0xcc, 0x76, 0xa6, 0xc2, 0x45, 0x3a, 0xd3, 0x25, 0x5f, 0x4d, 0x3e,
	0x53, 0x05, 0xa2, 0x9b, 0xc4, 0x64, 0xd7, 0xad, 0xaa, 0xdc, 0x18, 0xd8, 0xe6, 0x23, 0xd8, 0x4e,
	0x70, 0x8a, 0x66, 0x90, 0x8b, 0xa9, 0xb8, 0x3a, 0x26, 0xd3, 0x82, 0xab, 0x73, 0xb9, 0x11, 0xb6,
	0xde, 0x9f, 0xb7, 0x95, 0xa1, 0xe4, 0x9c, 0x4e, 0xd6, 0xe6, 0x93, 0x0c, 0x23, 0x55, 0x87, 0xb9,
	0x54, 0xab, 0x30, 0x7f, 0x1e, 0x5f, 0x9c, 0xf0, 0x40, 0x5e, 0x4d, 0x48, 0xc4, 0xd0, 0x21, 0xd4,
	0xe2, 0x66, 0x36, 0x4c, 0x38, 0x03, 0xf1, 0xd6, 0xc0, 0x9e, 0xcd, 0x59, 0x21, 0x97, 0xb3, 0xdf,
	0xc0, 0xd5, 0x5c, 0xa5, 0xaf, 0x6b, 0x36, 0xed, 0x1d, 0x85, 0xf5, 0x7a, 0x87, 0xf9, 0x0a, 0xf6,
	0x92, 0x49, 0x4b, 0x3e, 0x9d, 0x6b, 0x3b, 0xcb, 0x3c, 0xcd, 0x85, 0x8b, 0x4c, 0x87, 0x0f, 0x60,
	0x3f, 0x76, 0x19, 0xcf, 0x32, 0xeb, 0xfa, 0xec, 0x1c, 0x81, 0x9e, 0xfc, 0x88, 0x42, 0x75, 0x00,
	0xcf, 0xf7, 0xc8, 0x50, 0xfc, 0x96, 0x32, 0x36, 0x50, 0x05, 0x8a, 0x38, 0x1a, 0x19, 0x1a, 0xaa,
	0x42, 0x89, 0x97, 0x9c, 0x51, 0xe8, 0xf4, 0xa1, 0xc4, 0x87, 0x77, 0xb4, 0x0d, 0xba, 0x10, 0xe5,
	0x33, 0xbc, 0xb1, 0x81, 0xb6, 0xa0, 0x4a, 0xdc, 0xc0, 0xf1, 0xa7, 0x84, 0x18, 0x1a, 0xda, 0x81,
	0x1a, 0x23, 0xd8, 0x1d, 0x3a, 0x04, 0x73, 0x43, 0x05, 0x54, 0x83, 0x4a, 0x34, 0x09, 0x02, 0x3f,
	0x64, 0x46, 0xb1, 0xf3, 0x13, 0x30, 0xf2, 0x73, 0x0d, 0x6a, 0xc0, 0xb6, 0x30, 0x17, 0x8f, 0x37,
	0xc6, 0x06, 0xf7, 0x79, 0x42, 0xc7, 0x27, 0x86, 0x86, 0x00, 0xca, 0x2e, 0xb1, 0xe9, 0xc4, 0x35,
	0x0a, 0x1c, 0x92, 0xe3, 0x9f, 0x1a, 0xc5, 0xce, 0xaf, 0xd2, 0x07, 0x4d, 0xde, 0x00, 0xf7, 0x2a,
	0x6c, 0xc8, 0x8b, 0x30, 0x36, 0xb8, 0x57, 0x55, 0x8c, 0x86, 0xc6, 0x11, 0xaa, 0x07, 0xc5, 0x36,
	0x0a, 0x7c, 0x15, 0x4f, 0x01, 0x46, 0x91, 0x07, 0x63, 0xd3, 0xc8, 0xa5, 0x51, 0x44, 0x6c, 0xa3,
	0xd4, 0xf9, 0x20, 0x7d, 0x6e, 0x79, 0xa3, 0x4f, 0x62, 0xe5, 0xfd, 0xde, 0xd8, 0xe0, 0x7e, 0xdc,
	0x74, 0xac, 0x36, 0x34, 0x7e, 0x9e, 0xd4, 0x81, 0x51, 0xe8, 0xfd, 0xc3, 0x80, 0x9d, 0x04, 0x1a,
	0x09, 0x5f, 0xd3, 0x11, 0x41, 0x7f, 0xd1, 0xe0, 0x40, 0xf6, 0xe9, 0x05, 0x13, 0x39, 0x5a, 0x67,
	0x60, 0x6f, 0xed, 0xcd, 0x91, 0xe1, 0x23, 0x37, 0x60, 0x53, 0xf3, 0xe9, 0x59, 0xff, 0x56, 0x66,
	0x36, 0xdd, 0x91, 0x21, 0xb7, 0xe3, 0x3b, 0x6e, 0xe5, 0x37, 0xbe, 0xfa, 0xf7, 0x7f, 0xff, 0x50,
	0x68, 0x99, 0x57, 0xbb, 0xf1, 0x46, 0x37, 0x13, 0xcd, 0x03, 0xad, 0x83, 0xbe, 0xd2, 0x60, 0x9b,
	0x77, 0x83, 0xd8, 0x64, 0x84, 0x16, 0xb0, 0x5e, 0x96, 0x78, 0x6b, 0xc1, 0xdb, 0xc8, 0x55, 0xcd,
	0x0f, 0xcf, 0xfa, 0x9d, 0xec, 0xc0, 0xec, 0xd0, 0x88, 0x25, 0x08, 0xa2, 0x56, 0x6e, 0x2d, 0x20,
	0x6d, 0x21, 0x48, 0x20, 0x45, 0xe8, 0x8d, 0x06, 0x75, 0xd9, 0x06, 0x12, 0x23, 0x73, 0x9d, 0x28,
	0x53, 0x5c, 0x4b, 0xb3, 0x13, 0x9c, 0xf5, 0x1f, 0x66, 0x80, 0x1c, 0x48, 0x0e, 0x24, 0xae, 0xdb,
	0xcc, 0x6f, 0xcb, 0x36, 0xd1, 0x5a, 0x7e, 0x24, 0xe0, 0xbd, 0xdb, 0x33, 0xd3, 0x8c, 0x7d, 0x91,
	0x29, 0xaa, 0x2f, 0xbb, 0x38, 0x41, 0xc3, 0xd3, 0xf7, 0x46, 0x83, 0xdd, 0xc7, 0x27, 0xd8, 0x1b,
	0x93, 0x1c, 0x3f, 0x0f, 0x97, 0xf6, 0x8e, 0x15, 0x31, 0x1c, 0x9f, 0xf5, 0x1f, 0x64, 0x62, 0xd8,
	0x1b, 0x09, 0xeb, 0x29, 0x50, 0x49, 0xf8, 0xd6, 0x92, 0x7d, 0x81, 0xfe, 0x9d, 0xde, 0xdb, 0xcb,
	0xd0, 0x4b, 0x29, 0x8e, 0xfc, 0xaf, 0x1a, 0x34, 0x54, 0xcf, 0x7a, 0x9a, 0xa6, 0xbd, 0x3d, 0x0f,
	0x7b, 0xb6, 0xb1, 0x2d, 0xc5, 0x8d, 0xcf, 0xfa, 0xf7, 0x32, 0xb8, 0xaf, 0xa8, 0x7e, 0xd5, 0xf6,
	0xd3, 0x24, 0xb7, 0x16, 0x6d, 0x0a, 0xc4, 0xdf, 0xe9, 0x1d, 0x2e, 0x43, 0xac, 0x54, 0x38, 0xe4,
	0xdf, 0x69, 0xb0, 0x23, 0xeb, 0x23, 0x7d, 0xe4, 0x0f, 0x16, 0xbc, 0x7e, 0x2b, 0x6a, 0xe8, 0xf1,
	0x59, 0xff, 0xbd, 0xec, 0x64, 0x62, 0xa8, 0x9a, 0xf1, 0xc8, 0x69, 0x5b, 0xfc, 0xdd, 0xd2, 0xda,
	0x92, 0x16, 0xe4, 0x4a, 0x00, 0xdc, 0x31, 0xa1, 0x9b, 0x94, 0x3d, 0xc7, 0xf2, 0x47, 0x0d, 0xf6,
	0x73, 0x58, 0x92, 0xd8, 0x6f, 0x9c, 0x33, 0xf1, 0xaf, 0xc0, 0xf6, 0xe9, 0x25, 0xb0, 0x35, 0xcd,
	0x2b, 0x69, 0xf2, 0x66, 0x40, 0xfe, 0x56, 0x15, 0xf7, 0xf9, 0xe9, 0x52, 0xd5, 0xbd, 0xbf, 0xe0,
	0x48, 0x94, 0xf7, 0xc3, 0x4b, 0x60, 0xe2, 0xf5, 0x9d, 0x8e, 0x55, 0xdf, 0x68, 0xb0, 0x37, 0x83,
	0xe3, 0x63, 0x3f, 0x54, 0x7f, 0x47, 0x9d, 0x03, 0xe8, 0xf0, 0x9c, 0x61, 0x44, 0x00, 0x7b, 0x72,
	0x09, 0x60, 0x57, 0x50, 0x23, 0x05, 0xd6, 0x95, 0x25, 0xcf, 0x1b, 0x76, 0x53, 0x3e, 0xa6, 0xe7,
	0xdf, 0xe6, 0x92, 0x87, 0x77, 0xe9, 0x6d, 0x5a, 0x97, 0x00, 0xf8, 0x36, 0xba, 0xbe, 0xe0, 0x36,
	0xbb, 0xf1, 0xff, 0x19, 0x08, 0x83, 0xfe, 0x84, 0x30, 0x95, 0xbd, 0xad, 0x0c, 0x36, 0xbb, 0x35,
	0xf7, 0x03, 0xd5, 0xbc, 0x77, 0xd6, 0x7f, 0x2b, 0xf9, 0xe7, 0x4f, 0x1f, 0x13, 0xd6, 0x8e, 0x88,
	0x73, 0xdc, 0x6e, 0x55, 0xe3, 0x4f, 0xe1, 0xb2, 0x8e, 0xb6, 0x54, 0x26, 0xba, 0x5f, 0x50, 0xfb,
	0x4b, 0xf4, 0x6b, 0x28, 0xff, 0xf2, 0xc4, 0xef, 0xbb, 0x03, 0xb4, 0x24, 0xb0, 0x05, 0x9e, 0x3a,
	0x6b, 0x79, 0x2a, 0xa1, 0x42, 0x97, 0xa2, 0xaf, 0x35, 0xd8, 0x7a, 0x42, 0x58, 0xfa, 0xe7, 0xec,
	0x6c, 0x18, 0x99, 0x81, 0x36, 0x11, 0x31, 0x9f, 0xf1, 0xb6, 0x58, 0xe2, 0x6b, 0xd4, 0xe4, 0x26,
	0x19, 0x71, 0x03, 0x3f, 0xc4, 0xe1, 0xb4, 0x3d, 0x3a, 0xc1, 0xbc, 0x7d, 0x7f, 0x4e, 0xbc, 0xd6,
	0xd2, 0x13, 0xe1, 0x7c, 0x1b, 0xd5, 0xba, 0x7c, 0xab, 0x2b, 0xb6, 0x78, 0x37, 0xa9, 0x2b, 0x14,
	0xf1, 0xbf, 0xaa, 0xb3, 0x38, 0xae, 0xce, 0xe2, 0x50, 0x42, 0xfc, 0x52, 0xbf, 0x2d, 0x92, 0x1d,
	0xb4, 0x2d, 0x91, 0x9c, 0x48, 0x9b, 0x8f, 0xae, 0x9f, 0xf5, 0x0f, 0x50, 0x03, 0xaa, 0x16, 0x89,
	0x04, 0x5b, 0x7a, 0x9b, 0x77, 0x8f, 0xee, 0x1c, 0xdd, 0x31, 0x4b, 0x5d, 0x1c, 0xd0, 0x97, 0x65,
	0x91, 0xfd, 0xef, 0xfd, 0x3f, 0x00, 0x00, 0xff, 0xff, 0xd2, 0x86, 0x77, 0xe3, 0xe4, 0x18, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// IncidentServiceClient is the client API for IncidentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IncidentServiceClient interface {
	CreateMaintenanceIncident(ctx context.Context, in *MaintenanceIncidentCreate, opts ...grpc.CallOption) (*empty.Empty, error)
	ListIncidents(ctx context.Context, in *IncidentFilter, opts ...grpc.CallOption) (*IncidentList, error)
	AssignIncident(ctx context.Context, in *AssignmentRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ChangeIncidentStatus(ctx context.Context, in *IncidentStatusRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	CommentOnIncident(ctx context.Context, in *IncidentCommentRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	CreateEquipment(ctx context.Context, in *EquipmentCreate, opts ...grpc.CallOption) (*empty.Empty, error)
	CreateEquipmentIncident(ctx context.Context, in *EquipmentIncidentCreate, opts ...grpc.CallOption) (*empty.Empty, error)
	ListEquipment(ctx context.Context, in *EquipmentFilter, opts ...grpc.CallOption) (*EquipmentList, error)
	ListEquipmentForPerson(ctx context.Context, in *EquipmentFilter, opts ...grpc.CallOption) (*AssignedEquipmentList, error)
	ApproveEquipmentIncident(ctx context.Context, in *IncidentApprovalRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetPerson(ctx context.Context, in *Id, opts ...grpc.CallOption) (*Person, error)
	WhoAmI(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Person, error)
	GetChatToken(ctx context.Context, in *Id, opts ...grpc.CallOption) (*ChatToken, error)
	GetChatHistory(ctx context.Context, in *Id, opts ...grpc.CallOption) (*ChatHistory, error)
}

type incidentServiceClient struct {
	cc *grpc.ClientConn
}

func NewIncidentServiceClient(cc *grpc.ClientConn) IncidentServiceClient {
	return &incidentServiceClient{cc}
}

func (c *incidentServiceClient) CreateMaintenanceIncident(ctx context.Context, in *MaintenanceIncidentCreate, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/resequip.IncidentService/CreateMaintenanceIncident", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) ListIncidents(ctx context.Context, in *IncidentFilter, opts ...grpc.CallOption) (*IncidentList, error) {
	out := new(IncidentList)
	err := c.cc.Invoke(ctx, "/resequip.IncidentService/ListIncidents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) AssignIncident(ctx context.Context, in *AssignmentRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/resequip.IncidentService/AssignIncident", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) ChangeIncidentStatus(ctx context.Context, in *IncidentStatusRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/resequip.IncidentService/ChangeIncidentStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) CommentOnIncident(ctx context.Context, in *IncidentCommentRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/resequip.IncidentService/CommentOnIncident", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) CreateEquipment(ctx context.Context, in *EquipmentCreate, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/resequip.IncidentService/CreateEquipment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) CreateEquipmentIncident(ctx context.Context, in *EquipmentIncidentCreate, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/resequip.IncidentService/CreateEquipmentIncident", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) ListEquipment(ctx context.Context, in *EquipmentFilter, opts ...grpc.CallOption) (*EquipmentList, error) {
	out := new(EquipmentList)
	err := c.cc.Invoke(ctx, "/resequip.IncidentService/ListEquipment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) ListEquipmentForPerson(ctx context.Context, in *EquipmentFilter, opts ...grpc.CallOption) (*AssignedEquipmentList, error) {
	out := new(AssignedEquipmentList)
	err := c.cc.Invoke(ctx, "/resequip.IncidentService/ListEquipmentForPerson", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) ApproveEquipmentIncident(ctx context.Context, in *IncidentApprovalRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/resequip.IncidentService/ApproveEquipmentIncident", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) GetPerson(ctx context.Context, in *Id, opts ...grpc.CallOption) (*Person, error) {
	out := new(Person)
	err := c.cc.Invoke(ctx, "/resequip.IncidentService/GetPerson", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) WhoAmI(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Person, error) {
	out := new(Person)
	err := c.cc.Invoke(ctx, "/resequip.IncidentService/WhoAmI", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) GetChatToken(ctx context.Context, in *Id, opts ...grpc.CallOption) (*ChatToken, error) {
	out := new(ChatToken)
	err := c.cc.Invoke(ctx, "/resequip.IncidentService/GetChatToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) GetChatHistory(ctx context.Context, in *Id, opts ...grpc.CallOption) (*ChatHistory, error) {
	out := new(ChatHistory)
	err := c.cc.Invoke(ctx, "/resequip.IncidentService/GetChatHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IncidentServiceServer is the server API for IncidentService service.
type IncidentServiceServer interface {
	CreateMaintenanceIncident(context.Context, *MaintenanceIncidentCreate) (*empty.Empty, error)
	ListIncidents(context.Context, *IncidentFilter) (*IncidentList, error)
	AssignIncident(context.Context, *AssignmentRequest) (*empty.Empty, error)
	ChangeIncidentStatus(context.Context, *IncidentStatusRequest) (*empty.Empty, error)
	CommentOnIncident(context.Context, *IncidentCommentRequest) (*empty.Empty, error)
	CreateEquipment(context.Context, *EquipmentCreate) (*empty.Empty, error)
	CreateEquipmentIncident(context.Context, *EquipmentIncidentCreate) (*empty.Empty, error)
	ListEquipment(context.Context, *EquipmentFilter) (*EquipmentList, error)
	ListEquipmentForPerson(context.Context, *EquipmentFilter) (*AssignedEquipmentList, error)
	ApproveEquipmentIncident(context.Context, *IncidentApprovalRequest) (*empty.Empty, error)
	GetPerson(context.Context, *Id) (*Person, error)
	WhoAmI(context.Context, *empty.Empty) (*Person, error)
	GetChatToken(context.Context, *Id) (*ChatToken, error)
	GetChatHistory(context.Context, *Id) (*ChatHistory, error)
}

// UnimplementedIncidentServiceServer can be embedded to have forward compatible implementations.
type UnimplementedIncidentServiceServer struct {
}

func (*UnimplementedIncidentServiceServer) CreateMaintenanceIncident(ctx context.Context, req *MaintenanceIncidentCreate) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMaintenanceIncident not implemented")
}
func (*UnimplementedIncidentServiceServer) ListIncidents(ctx context.Context, req *IncidentFilter) (*IncidentList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListIncidents not implemented")
}
func (*UnimplementedIncidentServiceServer) AssignIncident(ctx context.Context, req *AssignmentRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AssignIncident not implemented")
}
func (*UnimplementedIncidentServiceServer) ChangeIncidentStatus(ctx context.Context, req *IncidentStatusRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeIncidentStatus not implemented")
}
func (*UnimplementedIncidentServiceServer) CommentOnIncident(ctx context.Context, req *IncidentCommentRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CommentOnIncident not implemented")
}
func (*UnimplementedIncidentServiceServer) CreateEquipment(ctx context.Context, req *EquipmentCreate) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEquipment not implemented")
}
func (*UnimplementedIncidentServiceServer) CreateEquipmentIncident(ctx context.Context, req *EquipmentIncidentCreate) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEquipmentIncident not implemented")
}
func (*UnimplementedIncidentServiceServer) ListEquipment(ctx context.Context, req *EquipmentFilter) (*EquipmentList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListEquipment not implemented")
}
func (*UnimplementedIncidentServiceServer) ListEquipmentForPerson(ctx context.Context, req *EquipmentFilter) (*AssignedEquipmentList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListEquipmentForPerson not implemented")
}
func (*UnimplementedIncidentServiceServer) ApproveEquipmentIncident(ctx context.Context, req *IncidentApprovalRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApproveEquipmentIncident not implemented")
}
func (*UnimplementedIncidentServiceServer) GetPerson(ctx context.Context, req *Id) (*Person, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPerson not implemented")
}
func (*UnimplementedIncidentServiceServer) WhoAmI(ctx context.Context, req *empty.Empty) (*Person, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WhoAmI not implemented")
}
func (*UnimplementedIncidentServiceServer) GetChatToken(ctx context.Context, req *Id) (*ChatToken, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChatToken not implemented")
}
func (*UnimplementedIncidentServiceServer) GetChatHistory(ctx context.Context, req *Id) (*ChatHistory, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChatHistory not implemented")
}

func RegisterIncidentServiceServer(s *grpc.Server, srv IncidentServiceServer) {
	s.RegisterService(&_IncidentService_serviceDesc, srv)
}

func _IncidentService_CreateMaintenanceIncident_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MaintenanceIncidentCreate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).CreateMaintenanceIncident(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resequip.IncidentService/CreateMaintenanceIncident",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).CreateMaintenanceIncident(ctx, req.(*MaintenanceIncidentCreate))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_ListIncidents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IncidentFilter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).ListIncidents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resequip.IncidentService/ListIncidents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).ListIncidents(ctx, req.(*IncidentFilter))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_AssignIncident_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AssignmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).AssignIncident(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resequip.IncidentService/AssignIncident",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).AssignIncident(ctx, req.(*AssignmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_ChangeIncidentStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IncidentStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).ChangeIncidentStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resequip.IncidentService/ChangeIncidentStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).ChangeIncidentStatus(ctx, req.(*IncidentStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_CommentOnIncident_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IncidentCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).CommentOnIncident(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resequip.IncidentService/CommentOnIncident",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).CommentOnIncident(ctx, req.(*IncidentCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_CreateEquipment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EquipmentCreate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).CreateEquipment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resequip.IncidentService/CreateEquipment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).CreateEquipment(ctx, req.(*EquipmentCreate))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_CreateEquipmentIncident_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EquipmentIncidentCreate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).CreateEquipmentIncident(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resequip.IncidentService/CreateEquipmentIncident",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).CreateEquipmentIncident(ctx, req.(*EquipmentIncidentCreate))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_ListEquipment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EquipmentFilter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).ListEquipment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resequip.IncidentService/ListEquipment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).ListEquipment(ctx, req.(*EquipmentFilter))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_ListEquipmentForPerson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EquipmentFilter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).ListEquipmentForPerson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resequip.IncidentService/ListEquipmentForPerson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).ListEquipmentForPerson(ctx, req.(*EquipmentFilter))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_ApproveEquipmentIncident_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IncidentApprovalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).ApproveEquipmentIncident(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resequip.IncidentService/ApproveEquipmentIncident",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).ApproveEquipmentIncident(ctx, req.(*IncidentApprovalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_GetPerson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).GetPerson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resequip.IncidentService/GetPerson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).GetPerson(ctx, req.(*Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_WhoAmI_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).WhoAmI(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resequip.IncidentService/WhoAmI",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).WhoAmI(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_GetChatToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).GetChatToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resequip.IncidentService/GetChatToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).GetChatToken(ctx, req.(*Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_GetChatHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).GetChatHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/resequip.IncidentService/GetChatHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).GetChatHistory(ctx, req.(*Id))
	}
	return interceptor(ctx, in, info, handler)
}

var _IncidentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "resequip.IncidentService",
	HandlerType: (*IncidentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateMaintenanceIncident",
			Handler:    _IncidentService_CreateMaintenanceIncident_Handler,
		},
		{
			MethodName: "ListIncidents",
			Handler:    _IncidentService_ListIncidents_Handler,
		},
		{
			MethodName: "AssignIncident",
			Handler:    _IncidentService_AssignIncident_Handler,
		},
		{
			MethodName: "ChangeIncidentStatus",
			Handler:    _IncidentService_ChangeIncidentStatus_Handler,
		},
		{
			MethodName: "CommentOnIncident",
			Handler:    _IncidentService_CommentOnIncident_Handler,
		},
		{
			MethodName: "CreateEquipment",
			Handler:    _IncidentService_CreateEquipment_Handler,
		},
		{
			MethodName: "CreateEquipmentIncident",
			Handler:    _IncidentService_CreateEquipmentIncident_Handler,
		},
		{
			MethodName: "ListEquipment",
			Handler:    _IncidentService_ListEquipment_Handler,
		},
		{
			MethodName: "ListEquipmentForPerson",
			Handler:    _IncidentService_ListEquipmentForPerson_Handler,
		},
		{
			MethodName: "ApproveEquipmentIncident",
			Handler:    _IncidentService_ApproveEquipmentIncident_Handler,
		},
		{
			MethodName: "GetPerson",
			Handler:    _IncidentService_GetPerson_Handler,
		},
		{
			MethodName: "WhoAmI",
			Handler:    _IncidentService_WhoAmI_Handler,
		},
		{
			MethodName: "GetChatToken",
			Handler:    _IncidentService_GetChatToken_Handler,
		},
		{
			MethodName: "GetChatHistory",
			Handler:    _IncidentService_GetChatHistory_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "resequip.proto",
}
